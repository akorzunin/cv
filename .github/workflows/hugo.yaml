# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  check:
    name: run pre-commit hooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v3
      - uses: pre-commit/action@v3.0.0

  run-pandoc:
    name: run pandoc
    runs-on: ubuntu-latest
    needs: [check]
    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: "2.9.2.1"
      - name: install pdf engine
        run: sudo apt-get install -y texlive-xetex
      - name: install pdf lang
        run: sudo apt-get install -y texlive-lang-cyrillic
      - name: install fonts
        run: sudo apt-get install -y fonts-open-sans
      - name: mkdir
        run: mkdir -p ./static/files
      - name: generate pdf
        run: >-
          pandoc
          --pdf-engine=xelatex
          ./content/export/resume.md
          -s
          -o ./static/files/resume.pdf
      - name: generate ru pdf
        run: >-
          pandoc
          --pdf-engine=xelatex
          ./content/export/resume.ru-ru.md -s
          -o ./static/files/resume.ru-ru.pdf
      - name: generate md
        run: >-
          pandoc
          -f markdown+smart
          ./content/export/resume.md
          -o ./static/files/resume.md
      - name: generate ru md
        run: >-
          pandoc
          -f markdown+smart
          ./content/export/resume.ru-ru.md
          -o ./static/files/resume.ru-ru.md

      - uses: actions/upload-artifact@master
        with:
          name: pandoc-output
          path: ./static/files
          retention-days: 1

  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.121.2
    needs: [check, run-pandoc]
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - name: get pandoc files
        uses: actions/download-artifact@master
        with:
          name: pandoc-output
          path: ./static/files
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3
